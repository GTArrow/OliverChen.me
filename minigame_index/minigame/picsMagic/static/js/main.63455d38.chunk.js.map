{"version":3,"sources":["components/HeaderComponent.js","components/FooterComponent.js","components/BasicsComponent.js","components/FilterComponent.js","components/CropComponent.js","components/DrawComponent.js","components/TextComponent.js","components/MaskComponent.js","components/StickerComponent.js","components/HomeComponent.js","components/HelpCenter.js","components/MainComponent.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","state","isNavOpen","this","setState","Fragment","dark","expand","className","onClick","toggleNav","href","process","src","height","alt","isOpen","navbar","to","Component","Footer","Basics","axis","x","range","onChange","exposurerange","xmin","xmax","xstep","styles","thumb","width","opacity","Number","toFixed","rangen","noiserange","rangeb","blurrange","Filter","outline","colour","active","grayscaleselected","left","object","GrayscaleFilter","body","sepiaselected","SepiaFilter","embossselected","EmbossFilter","invertselected","InvertFilter","sharpenselected","SharpenFilter","pixelateselected","PixelateFilter","Reform","tag","color","handleFlip","top","handleFlipy","Rotate","Rotate2","curMode","startcropdrawingmode","disabled","iscropmode","Crop","cancelcrop","Draw","useState","dropdownOpen","setOpen","toggle","reactCSS","background","r","g","b","a","popover","position","zIndex","cover","right","bottom","style","changeColor","rgb","colors","changeRange","backgroundColor","handleDraw","removeDraw","Text","bold","handleText","italic","underline","addText","removeText","Mask","aria-hidden","isclicked","handleMask1","ismaskclicked","handleMask2","handleMask3","handleMask4","isMaskMode","applyMask","deleteMask","Sticker","isLogoOpen","setLogoOpen","isGradOpen","setGradOpen","isEngOpen","setEngOpen","handleSticker1","handleSticker2","handleSticker3","handleSticker4","handleSticker5","handleSticker6","handleSticker7","removeSticker","download","require","hexToRGBa","hex","alpha","parseInt","slice","isNaN","getRGBaValues","colorsOnly","substring","indexOf","lastIndexOf","split","Home","imageEditor","React","createRef","hiddenFileInput","imageSelected","imageLib","curId","activeTab","drawColor","textColor","drawRange","textRange","selectedId","selectedTextId","selectedDrawId","selectedImageId","brightnessrange","cropsize","isModalOpen","checkcropmode","cropMode","maskclicked","tooltipOpen","tooltipredo","tooltipreset","filterUsed","saveImageToDisk","bind","toggleModal","confirmModal","checkhighlight","uploadHandleClick","uploadHandleChange","toggleTab","toggleUndo","toggleRedo","toggleReset","tab","current","getInstance","loadImageFromURL","name","changeImageSelected","changeImageLib","changeCurId","data","imageEditorInst","toDataURL","mimeType","extension","getRootElement","children","classList","add","img","id","click","event","files","target","fileList","i","length","newImage","URL","createObjectURL","push","concat","stopDrawingMode","type","fontSize","fill","fontWeight","fontStyle","textDecoration","textAlign","originPointer","getDrawingMode","deactivateAll","mode","editorInstance","settings","startDrawingMode","setBrush","removeObject","y","styleObj","changeTextStyle","flipX","flipY","size","setCropzoneRect","getCropzoneRect","crop","rotate","applyFilter","filter","f","removeFilter","brightness","noise","blur","condition","addImageObject","myArray","p","forEach","then","maskObjId","undo","redo","imgLibrary","map","image","ref","includeUI","loadImage","path","uiSize","cssMaxHeight","cssMaxWidth","selectionStyle","cornerSize","cornerStyle","cornerColor","rotatingPointOffset","onObjectActivated","handleSelection","onMousedown","handleMouseDown","tabs","vertical","pills","classnames","startDrawMode","startTextMode","block","placement","clearall","tabId","handleexposure","handlenoise","handleblur","buttonactive","cropactive","handleDrawColor","handleDrawRange","handleTextColor","handleTextRange","multiple","accept","display","HelpCenter","isFormOpen","setFormOpen","isA1Open","setA1Open","isA2Open","setA2Open","isA3Open","setA3Open","isA4Open","setA4Open","isA5Open","setA5Open","isA6Open","setA6Open","isSubmit","setSubmit","isSearch","setSearch","setRightSearch","searchContent","setSearchContent","ifJump","setJump","placeholder","e","value","addonType","role","class","for","aria-labelledby","data-parent","history","createHistory","images","Main","exact","component","App","basename","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63455d38.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Navbar, Nav, NavbarToggler, Collapse,NavItem, NavbarBrand} from 'reactstrap';\nimport {NavLink} from 'react-router-dom';\n\nclass Header extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            isNavOpen:false\n        };\n    }\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n    render(){\n        return(\n            <React.Fragment>\n            <Navbar dark expand=\"md\">\n            <div className=\"row\">\n                <NavbarToggler onClick={()=>this.toggleNav()}/>\n                <NavbarBrand className=\"ml-4\" href={`${process.env.PUBLIC_URL}/home`}> \n                    <img src={`${process.env.PUBLIC_URL}/images/logo.png`} height=\"40\"  alt=\"PicsMagic\"/>\n                </NavbarBrand>\n                <Collapse isOpen={this.state.isNavOpen} navbar>\n                    <Nav navbar>\n                        <NavItem>\n                            <NavLink className=\"nav-link\" to=\"/home\">\n                                <span className=\"fa fa-home fa-lg\"></span> Home\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink className=\"nav-link\" to=\"/helpcenter\">\n                                <span className=\"fa fa-info-circle fa-lg\"></span> Help Center\n                            </NavLink>\n                        </NavItem>\n                    </Nav>\n                </Collapse>\n            </div>\n            </Navbar>\n            </React.Fragment>\n        );\n    }\n}\nexport default Header;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nfunction Footer(props) {\n    return(\n    <div className=\"footer\">\n        <div className=\"container\">\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-4 offset-1 offset-sm-2 col-sm-6\">\n                    <h5>Links</h5>\n                    <ul className=\"list-unstyled\">\n                        <li><Link to=\"/home\">Home</Link></li>\n                        <li><Link to=\"/helpcenter\">Help Center</Link></li>\n                    </ul>\n                </div>\n                <div className=\"col-6 col-sm-4\">\n                    <h5>Contact Us</h5>\n                    <address>\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +3678882736<br />\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:picsmagic@mcmaster.ca\">\n                      magic@mcmaster.ca</a>\n                    </address>\n                </div>\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-auto\">\n                    <p>© Copyright 2020 PicsMagic</p>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport {Card, CardBody,CardText} from \"reactstrap\";\nimport Slider from 'react-input-slider';\nfunction Basics(props){\n    return (\n        <div className=\"row row-bar-content\">\n                            <Card>\n                <CardBody>\n            <CardText>\n                        Exposure:{' '}\n                        <br/>\n                        <Slider\n                            axis=\"x\"\n                            x={props.range.x}\n                            onChange={(range) => props.exposurerange(range)}\n                            xmin={-1}\n                            xmax={1}\n                            xstep={0.01}\n                            styles={{\n                                thumb: {\n                                  width: 20,\n                                  height: 20,\n                                  opacity: 0.8\n                                }\n                              }}\n                        /> \n                        {' '}{Number(((props.range.x)*100).toFixed(1))}\n            </CardText>\n            <hr/>\n            <CardText>\n                        Noise:{' '}\n                        <br></br>\n                        <Slider\n                            axis=\"x\"\n                            x={props.rangen.x}\n                            onChange={(rangen) => props.noiserange(rangen)}\n                            xmin={0}\n                            xmax={500}\n                            xstep={1}\n                            styles={{\n                                thumb: {\n                                  width: 20,\n                                  height: 20,\n                                  opacity: 0.8\n                                }\n                              }}\n                        /> \n                        {' '}{Number(((props.rangen.x)/5).toFixed(1))}\n            </CardText>\n            <hr/>\n            <CardText>\n                        Blur:{' '}\n                        <br></br>\n                        <Slider\n                            axis=\"x\"\n                            x={props.rangeb.x}\n                            onChange={(rangeb) => props.blurrange(rangeb)}\n                            xmin={0}\n                            xmax={0.2}\n                            xstep={0.0001}\n                            styles={{\n                                thumb: {\n                                  width: 20,\n                                  height: 20,\n                                  opacity: 0.8\n                                }\n                              }}\n                        /> \n                        {' '}{Number(((props.rangeb.x)*500).toFixed(1))}\n            </CardText>\n\n</CardBody>\n            </Card>\n        </div>\n    );\n}\n\nexport default Basics;","import React from 'react';\nimport {Card, CardBody,CardText,Media,Button} from \"reactstrap\";\n\nfunction Filter(props){\n    return (\n<div className=\"row row-bar-content\">\n                <Card>\n                <CardBody>\n                            <CardText>\n                            <Button outline colour='light' active={props.grayscaleselected}> \n                                    <Media left >\n                                        <Media object src={`${process.env.PUBLIC_URL}/images/filter/grayscale.png`} width='150' alt=\"grayscale\" onClick={()=>props.GrayscaleFilter()}/>\n                                    </Media>\n                                    <Media body className=\"mt-auto mb-auto\">\n                                        GrayScale\n                                    </Media>\n                                </Button>\n                            </CardText>\n                            <CardText>\n                            <Button outline colour='light' active={props.sepiaselected}> \n                                    <Media left>\n                                        <Media object src={`${process.env.PUBLIC_URL}/images/filter/sepia.png`} width='150' alt=\"sepia\" onClick={()=>props.SepiaFilter()}/>\n                                    </Media>\n                                    <Media body className=\"mt-auto mb-auto\">\n                                    Sepia\n                                    </Media>\n                                </Button>\n                            </CardText>\n                            <CardText>\n                            <Button outline colour='light' active={props.embossselected}> \n                                    <Media left>\n                                        <Media object src={`${process.env.PUBLIC_URL}/images/filter/emboss.png`} width='150' alt=\"emboss\" onClick={()=>props.EmbossFilter()}/>\n                                    </Media>\n                                    <Media body className=\"mt-auto mb-auto\">\n                                    Emboss\n                                    </Media>\n                                </Button>\n                            </CardText>\n                            <CardText>\n                            <Button outline colour='light' active={props.invertselected}>\n                                    <Media left>\n                                        <Media object src={`${process.env.PUBLIC_URL}/images/filter/invert.png`} width='150' alt=\"invert\" onClick={()=>props.InvertFilter()}/>\n                                    </Media>\n                                    <Media body className=\"mt-auto mb-auto\">\n                                    Invert\n                                    </Media>\n                                </Button>\n                            </CardText>\n                            <CardText>\n                            <Button outline colour='light' active={props.sharpenselected}> \n                                    <Media left>\n                                        <Media object src={`${process.env.PUBLIC_URL}/images/filter/sharpen.png`} width='150' alt=\"sharpen\" onClick={()=>props.SharpenFilter()}/>\n                                    </Media>\n                                    <Media body className=\"mt-auto mb-auto\">\n                                    Sharpen\n                                    </Media>\n                                </Button>\n                            </CardText>\n                            <CardText>\n                            <Button outline colour='light' active={props.pixelateselected}> \n                                    <Media left>\n                                        <Media object src={`${process.env.PUBLIC_URL}/images/filter/pixelate.png`} width='150' alt=\"pixelate\" onClick={()=>props.PixelateFilter()}/>\n                                    </Media>\n                                    <Media body className=\"mt-auto mb-auto\">\n                                    Pixelate\n                                    </Media>\n                                </Button>\n                            </CardText>\n</CardBody>\n            </Card>\n</div>\n    );\n}\n\nexport default Filter;","import React from 'react';\nimport {Media,Card, CardBody,Button,CardText, CardTitle} from \"reactstrap\";\n\nfunction Reform(props){\n    return (\n        <div className=\"row row-bar-content\"> \n            <Card>\n                <CardBody>\n                    <CardTitle tag=\"h6\">\n                        Flip:\n                    </CardTitle>\n                        <CardText>\n                            <Button color='light' className=\"mb-2\" onClick={()=>{props.handleFlip()}}> \n                            <Media top>\n                                <Media left>\n                                    <Media object src={`${process.env.PUBLIC_URL}/images/flipX.png`} width='25' alt=\"flipX\" />\n                                </Media>\n                                <Media body>\n                                    Flip X\n                                </Media>\n                            </Media>\n                            </Button>{\" \"}\n\n                            <Button color='light' className=\"mb-2\" onClick={()=>{props.handleFlipy()}}> \n                            <Media top>\n                                <Media left>\n                                    <Media object src={`${process.env.PUBLIC_URL}/images/flipY.png`} width='25' alt=\"flipY\" />\n                                </Media>\n                                <Media body>\n                                    Flip Y\n                                </Media>\n                            </Media>\n                            </Button>\n                            \n                        </CardText>\n                        <hr/>\n                        <CardTitle tag=\"h6\">\n                        Rotate:\n                        </CardTitle >\n                            <CardText>\n                            <Button color='light' className=\"mb-2\" onClick={()=>{props.Rotate()}}> \n                            <Media top>\n                                <Media left>\n                                    <Media object src={`${process.env.PUBLIC_URL}/images/rotate-clock.png`} width='20' alt=\"rotate-clock\" />\n                                </Media>\n                                <Media body>\n                                    90\n                                </Media>\n                            </Media>\n                            </Button>{\" \"}\n                            <Button color='light' className=\"mb-2\" onClick={()=>{props.Rotate2()}}> \n                            <Media top>\n                                <Media left>\n                                    <Media object src={`${process.env.PUBLIC_URL}/images/rotate-countclock.png`} width='20' alt=\"rotate-counterclock\" />\n                                </Media>\n                                <Media body>\n                                    90\n                                </Media>\n                            </Media>\n                            </Button>\n                           \n                            </CardText>\n                            <hr/>\n                        <CardTitle tag=\"h6\">\n                        Crop:\n                        </CardTitle>\n                            <CardText>                \n                                <Button active={props.curMode===\"crop-square\"} color='light' className=\"mb-2\" onClick={() => {props.startcropdrawingmode(\"1\")}}> \n                                <Media top>\n                                    <Media left>\n                                        <Media object src={`${process.env.PUBLIC_URL}/images/crop.png`} width='20' alt=\"crop-square\" />\n                                    </Media>\n                                    <Media body>\n                                        Square\n                                    </Media>\n                                </Media>\n                                </Button>{\" \"}\n                                <Button active={props.curMode===\"crop-4-3\"} color='light' className=\"mb-2\" onClick={() => {props.startcropdrawingmode(\"1.75\")}}> \n                                <Media top>\n                                    <Media left>\n                                        <Media object src={`${process.env.PUBLIC_URL}/images/crop.png`} width='20' alt=\"crop-4-3\" />\n                                    </Media>\n                                    <Media body>\n                                        4:3\n                                    </Media>\n                                </Media>\n                                </Button>{\" \"}\n                                <Button active={props.curMode===\"crop-16-9\"} color='light' className=\"mb-2\" onClick={() => {props.startcropdrawingmode(\"1.77777\")}}> \n                                <Media top>\n                                    <Media left>\n                                        <Media object src={`${process.env.PUBLIC_URL}/images/crop.png`} width='20' alt=\"crop-16-9\" />\n                                    </Media>\n                                    <Media body>\n                                        16:9\n                                    </Media>\n                                </Media>\n                                </Button>{\" \"}\n                                <div className=\"row\">\n                                <Button color=\"primary\" outline className=\"ml-2\"disabled={!props.iscropmode} onClick={()=>props.Crop()}>Apply</Button>{' '}\n                                <Button color=\"danger\" outline className=\"ml-2\"disabled={!props.iscropmode} onClick={()=>props.cancelcrop()}>Cancel</Button>{' '}\n                                </div>\n                            </CardText>\n                            \n                        </CardBody>\n            </Card>\n</div>\n   \n    );\n}\n\nexport default Reform;","import React,{useState} from 'react';\nimport reactCSS from 'reactcss';\nimport {Button, Card, CardBody,CardTitle,CardText,Media} from \"reactstrap\";\nimport {TwitterPicker} from 'react-color';\nimport Slider from 'react-input-slider';\n\nfunction Draw(props){\n    const [dropdownOpen, setOpen] = useState(false);\n\n    const toggle = () => setOpen(!dropdownOpen);\n    const styles = reactCSS({\n    'default': {\n        color: {\n        background: `rgba(${ props.color.r }, ${ props.color.g }, ${ props.color.b }, ${ props.color.a })`,\n        },\n        popover: {\n        position: 'absolute',\n        zIndex: '2',\n        },\n        cover: {\n        position: 'fixed',\n        top: '0px',\n        right: '0px',\n        bottom: '0px',\n        left: '0px',\n        },\n    },\n    });\n    const colorChange= (color)=> props.changeColor(color.rgb);\n\n    return (\n        <div className=\"row row-bar-content\">\n            <Card>\n                <CardBody>\n                    <CardTitle tag=\"h6\">\n                        Set your brush:\n                    </CardTitle>\n                    <CardText>\n                        Color:{' '}\n                        <button onClick={toggle}  className=\"btn \" style={styles.color}>{' '}</button>\n                            { dropdownOpen ? <div style={ styles.popover }>\n                            <div style={ styles.cover } onClick={ toggle }/>\n                            <TwitterPicker onChange={colorChange} width=\"170px\"\n                            colors={['#FF6900', '#FCB900', '#7BDCB5', '#00D084', '#8ED1FC', \n                            '#0693E3', '#ABB8C3', '#EB144C', '#F78DA7', '#9900EF',' #1a1a1a','#f2f2f2']}/>\n                            </div> : null }\n                    </CardText>\n                    <CardText>\n                        Range:{' '}<br/>\n                        <Slider\n                            axis=\"x\"\n                            x={props.range.x}\n                            onChange={(range) => props.changeRange(range)}\n                            xmin={5}\n                            xmax={30}\n                            xstep={1}\n                            styles={{\n                                active: {\n                                  backgroundColor: `rgba(${ props.color.r }, ${ props.color.g }, ${ props.color.b }, ${ props.color.a })`\n                                },\n                                thumb: {\n                                  width: 20,\n                                  height: 20,\n                                  opacity: 0.8\n                                }\n                              }}\n                        /> {props.range.x}\n                    </CardText>\n                    <hr/>\n                    <CardTitle tag=\"h6\">\n                    Set your line:<br/>\n                    </CardTitle>\n                    <CardText>\n                        <Button active={props.curMode===\"freedraw\"} color='light' className=\"mb-2\" onClick={()=>props.handleDraw(\"free\")}> \n                        <Media >\n                            <Media body>\n                                Free:\n                            </Media>\n                            <Media right>\n                                <Media object src={`${process.env.PUBLIC_URL}/images/wave_line.png`} width='50' alt=\"Wave Line\" />\n                            </Media>\n                        </Media>\n                        </Button>\n                        <Button color='light' active={props.curMode===\"straightdraw\"}  onClick={()=>props.handleDraw(\"line\")}> \n                        <Media >\n                            <Media body>\n                                Straight:\n                            </Media>\n                            <Media right>\n                                <Media object src={`${process.env.PUBLIC_URL}/images/straight_line.png`} width='50' alt=\"Straight Line\" />\n                            </Media>\n                        </Media>\n                        </Button>\n                        <hr/>\n                        <div className=\"row\">\n                        <Button color='primary' outline className=\"ml-2\" active={props.curMode===\"edit\"}  onClick={()=>props.handleDraw(\"edit\")}> \n                        <Media >\n                            <Media body>\n                                Edit: <i className=\"fa fa-mouse-pointer\"></i>\n                            </Media>\n                        </Media>\n                        </Button>\n                        <Button color='danger' outline className=\"ml-2\" onClick={()=>props.removeDraw()}> \n                        <Media >\n                            <Media body>\n                                Delete\n                            </Media>\n                        </Media>\n                        </Button>\n                        </div>\n                    </CardText>\n                    \n                </CardBody>\n            </Card>\n        </div>\n    );\n}\n\nexport default Draw;","import React,{useState} from 'react';\nimport reactCSS from 'reactcss';\nimport {Button, Card, CardBody,CardTitle,CardText,Media} from \"reactstrap\";\nimport {TwitterPicker} from 'react-color';\nimport Slider from 'react-input-slider';\n\nfunction Text(props){\n    const [dropdownOpen, setOpen] = useState(false);\n\n    const toggle = () => setOpen(!dropdownOpen);\n    const styles = reactCSS({\n    'default': {\n        color: {\n        background: `rgba(${ props.color.r }, ${ props.color.g }, ${ props.color.b }, ${ props.color.a })`,\n        },\n        popover: {\n        position: 'absolute',\n        zIndex: '2',\n        },\n        cover: {\n        position: 'fixed',\n        top: '0px',\n        right: '0px',\n        bottom: '0px',\n        left: '0px',\n        },\n    },\n    });\n    const colorChange= (color)=> props.changeColor(color.rgb);\n\n    return (\n        <div className=\"row row-bar-content\">\n            <Card>\n                <CardBody>\n                    <CardTitle tag=\"h6\">\n                        Settings:\n                    </CardTitle>\n                    <CardText>\n                        Color:{' '}\n                        <button onClick={toggle}  className=\"btn \" style={styles.color}>{' '}</button>\n                            { dropdownOpen ? <div style={ styles.popover }>\n                            <div style={ styles.cover } onClick={ toggle }/>\n                            <TwitterPicker onChange={colorChange} width=\"170px\" \n                            colors={['#FF6900', '#FCB900', '#7BDCB5', '#00D084', '#8ED1FC', \n                            '#0693E3', '#ABB8C3', '#EB144C', '#F78DA7', '#9900EF','#f2f2f2','#0d0d0d']}/>\n                            </div> : null }\n                    </CardText>\n                    <CardText>\n                        Range:{' '}<br/>\n                        <Slider\n                            axis=\"x\"\n                            x={props.range.x}\n                            onChange={(range) => props.changeRange(range)}\n                            xmin={10}\n                            xmax={100}\n                            xstep={1}\n                            styles={{\n                                active: {\n                                  backgroundColor: `rgba(${ props.color.r }, ${ props.color.g }, ${ props.color.b }, ${ props.color.a })`\n                                },\n                                thumb: {\n                                  width: 20,\n                                  height: 20,\n                                  opacity: 0.8\n                                }\n                              }}\n                        /> {props.range.x}\n                    </CardText>\n                    <hr/>\n                    <CardText>\n                        <Button color='light' active={props.bold}  onClick={()=>props.handleText(\"b\")}> \n                        <Media >\n                            <Media body>\n                                <i className=\"fa fa-bold\"></i>\n                            </Media>\n                        </Media>\n                        </Button>\n                        <Button color='light' active={props.italic}  onClick={()=>props.handleText(\"i\")}> \n                        <Media >\n                            <Media body>\n                                <i className=\"fa fa-italic\"></i>\n                            </Media>\n                        </Media>\n                        </Button>\n                        <Button color='light' active={props.underline}  onClick={()=>props.handleText(\"u\")}> \n                        <Media >\n                            <Media body>\n                                <i className=\"fa fa-underline\"></i>\n                            </Media>\n                        </Media>\n                        </Button>\n                        <hr/>\n                        <Button color='light' active={props.curMode===\"left\"}  onClick={()=>props.handleText(\"l\")}> \n                        <Media >\n                            <Media body>\n                                <i className=\"fa fa-align-left\"></i>\n                            </Media>\n                        </Media>\n                        </Button>\n                        <Button color='light' active={props.curMode===\"center\"}  onClick={()=>props.handleText(\"c\")}> \n                        <Media >\n                            <Media body>\n                                <i className=\"fa fa-align-center\"></i>\n                            </Media>\n                        </Media>\n                        </Button>\n                        <Button color='light' active={props.curMode===\"right\"}  onClick={()=>props.handleText(\"r\")}> \n                        <Media >\n                            <Media body>\n                                <i className=\"fa fa-align-right\"></i>\n                            </Media>\n                        </Media>\n                        </Button>\n                        <hr/>\n                        <Button color='primary' className=\"mb-2\"outline onClick={()=>props.addText()}> \n                        <Media >\n                            <Media body>\n                            Add New: <i className=\"fa fa-plus\"></i>\n                            </Media>\n                        </Media>\n                        </Button>\n                        <br/>\n                        <Button color='danger' outline   onClick={()=>props.removeText()}> \n                        <Media >\n                            <Media body>\n                            Delete\n                            </Media>\n                        </Media>\n                        </Button>\n                    </CardText>\n                    \n                </CardBody>\n            </Card>\n        </div>\n    );\n}\n\nexport default Text;","import React from 'react';\nimport {Button, Card, CardBody,CardTitle,CardText,Media,  Alert, Tooltip} from \"reactstrap\";\n\n\nfunction Mask(props){\n    return (\n        <div className=\"row row-bar-content\">\n            <Card>\n            \n                <CardBody>\n                    <CardTitle tag=\"h6\" >\n                        Select A Frame\n                        <span className='select-icon'>\n                       <i className=\"fa fa-hand-o-down\" aria-hidden=\"true\"></i>\n                        </span>\n                        <br/>\n                    </CardTitle>\n                    <CardText>\n                        <Button color='light'  disabled={props.isclicked} \n                        onClick={()=>{props.handleMask1();props.ismaskclicked(true)}}> \n                        <Media >\n                            <Media body>\n                                <Media object src={`${process.env.PUBLIC_URL}/images/Frames/frame1.jpg`} width='50'  height = '100' alt=\"Frame1\"/> \n                            </Media>\n                        </Media>\n                        </Button>\n                        {' '}\n                        <Button color='light'  disabled={props.isclicked} \n                        onClick={()=>{props.handleMask2();props.ismaskclicked(true)}}> \n                        <Media >\n                            <Media body>\n                                <Media object src={`${process.env.PUBLIC_URL}/images/Frames/frame2.jpg`} width='50'  height = '100' alt=\"Frame2\"/> \n                            </Media>\n                        </Media>\n                        </Button>\n                    </CardText>\n                    \n                    <CardText>\n\n                    <Button color='light'   disabled={props.isclicked} \n                    onClick={()=>{props.handleMask3();props.ismaskclicked(true)}}> \n                        <Media >\n                            <Media body>\n                                <Media object src={`${process.env.PUBLIC_URL}/images/Frames/frame3.jpg`} width='100'  height = '50' alt=\"Frame3\"/> \n                            </Media>\n                        </Media>\n                        </Button>\n                        </CardText>\n                    \n                        <CardText>\n                        <Button color='light'  disabled={props.isclicked} \n                        onClick={()=>{props.handleMask4();props.ismaskclicked(true)}}> \n                        <Media >\n                            <Media body>\n                                <Media object src={`${process.env.PUBLIC_URL}/images/Frames/frame5.jpg`} width='100'  height = '50' alt=\"Frame4\"/> \n                            </Media>\n                        </Media>\n                        </Button>\n                        \n                    </CardText>\n\n                    <hr />\n\n                    <CardText>\n                        <Button color='primary' outline\n                         disabled={!props.isMaskMode} onClick={()=>{props.applyMask();props.ismaskclicked(false)}}> \n                        <Media >\n                            <Media body>\n                                Apply\n                            </Media>\n                        </Media>\n                        </Button>\n                        {' '}\n\n                        <Button outline color='danger' disabled={!props.isMaskMode} \n                        onClick={()=>{props.deleteMask();props.ismaskclicked(false)}}> \n                        <Media >\n                            <Media body>\n                                Delete\n                            </Media>\n                        </Media>\n                        </Button>\n                    </CardText>\n\n                    <hr />\n\n                    <CardText>\n                         <Alert color=\"warning\" >\n                         <h6 className=\"alert-heading\">Please read this carefully before you apply a frame!</h6>\n                         <hr />\n                         Once a frame is applied, you will not be able to undo the operation. Only Reset is allowed, but all the current effects on the image will be removed.<br />\n                         <hr />\n                                                    </Alert>\n\n                     </CardText>\n                    \n                </CardBody>\n            </Card>\n        </div>\n    );\n}\n\nexport default Mask;","import React,{useState} from 'react';\nimport {Button, Card, CardBody,CardTitle,CardText,Media, Collapse} from \"reactstrap\";\n\n\nfunction Sticker(props){\n\n    const [isLogoOpen, setLogoOpen] = useState(true);\n    const [isGradOpen, setGradOpen] = useState(false);\n    const [isEngOpen, setEngOpen] = useState(false);\n\n    const toggleLogo = () => setLogoOpen(!isLogoOpen);\n    const toggleGrad = () => setGradOpen(!isGradOpen);\n    const toggleEng = () => setEngOpen(!isEngOpen);\n\n    return (\n        <div className=\"row row-bar-content\">\n            <Card>\n                <CardBody>\n                    <CardTitle tag=\"h6\" onClick={toggleLogo}>\n                    Logo\n                    <span className='expand-icon'>\n                    <i className=\"fa fa-hand-o-left\" aria-hidden=\"true\"></i>\n                    </span>\n                    <br/>\n                    </CardTitle>\n                    <Collapse isOpen={isLogoOpen}>\n                    \n                    \n                    <CardText>\n                        <Button outline colour='light' onClick={()=>props.handleSticker1('free')}> \n                        <Media >\n                            <Media body>\n                                <Media object src={`${process.env.PUBLIC_URL}/images/Sticker/mcmlogo1.jpg`} width='50' height = '50' alt=\"Logo1\" />\n                            </Media>\n                        </Media>\n                        </Button>\n                        {'   '}\n                        <Button outline colour='light' onClick={()=>props.handleSticker2('free')}> \n                        <Media >\n                            <Media body>\n                                <Media object src={`${process.env.PUBLIC_URL}/images/Sticker/mcmlogo2.jpg`} width='50' height = '50' alt=\"Logo2\" />\n                            </Media>\n                        </Media>\n                        </Button>\n                    </CardText>\n                    </Collapse>\n                    \n                    <hr />\n\n                    <CardTitle tag=\"h6\" onClick={toggleGrad}>\n                        Graduation\n                        <span className='expand-icon2'>\n                        <i className=\"fa fa-hand-o-left\" aria-hidden=\"true\"></i>\n                        </span>\n                        <br/>\n                    </CardTitle>\n                    <Collapse isOpen={isGradOpen}>\n                    \n                    \n                    <CardText>\n                        <Button outline colour='light' onClick={()=>props.handleSticker3('free')}> \n                        <Media >\n                            <Media body>\n                                <Media object src={`${process.env.PUBLIC_URL}/images/Sticker/mcmgrad1.jpg`} width='50' height = '50' alt=\"Grad1\"/>\n                            </Media>\n                        </Media>\n                        </Button>\n                        {'   '}\n                        <Button outline colour='light' onClick={()=>props.handleSticker4('free')}> \n                        <Media >\n                            <Media body>\n                                <Media object src={`${process.env.PUBLIC_URL}/images/Sticker/mcmgrad2.jpg`} width='50'  height = '50'  alt=\"Grad2\"/>\n                            </Media>\n                        </Media>\n                        </Button>\n                    </CardText>\n                    </Collapse>\n                    \n                    <hr />\n                    <CardTitle tag=\"h6\" onClick={toggleEng}>\n                       Engineering \n                       <span className='expand-icon3'>\n                       <i className=\"fa fa-hand-o-left\" aria-hidden=\"true\"></i>\n                        </span>\n                       <br/>\n                    </CardTitle>\n                    <Collapse isOpen={isEngOpen}>\n                    \n                    \n                    <CardText>\n                        <Button outline colour='light' onClick={()=>props.handleSticker5('free')}> \n                        <Media >\n                            <Media body>\n                                <Media object src={`${process.env.PUBLIC_URL}/images/Sticker/mcmeng1.jpg`} width='50' height = '50' alt=\"Eng1\" />\n                            </Media>\n                        </Media>\n                        </Button>\n                        {'   '}\n                        <Button outline colour='light' onClick={()=>props.handleSticker6('free')}> \n                        <Media >\n                            <Media body>\n                                <Media object src={`${process.env.PUBLIC_URL}/images/Sticker/mcmeng2.jpg`} width='50'  height = '50' alt=\"Eng2\"/>\n                            </Media>\n                        </Media>\n                        </Button>\n\n                        </CardText><CardText>\n\n                        <Button outline colour='light' onClick={()=>props.handleSticker7('free')}> \n                        <Media >\n                            <Media body>\n                                <Media object src={`${process.env.PUBLIC_URL}/images/Sticker/mcmeng3.jpg`} width='50'  height = '50' alt=\"Eng2\"/>\n                            </Media>\n                        </Media>\n                        </Button>\n                    </CardText>\n                    </Collapse>\n\n                    <hr />\n\n                    <CardText>\n                        <Button outline color='danger' active={props.curMode===\"free\"} onClick={()=>props.removeSticker()}> \n                        <Media >\n                            <Media body>\n                                Delete\n                            </Media>\n                        </Media>\n                        </Button>\n\n                    </CardText>\n                </CardBody>\n\n            </Card>\n        </div>\n    );\n}\n\nexport default Sticker;","import React, { Component} from \"react\";\nimport ImageEditor from \"@toast-ui/react-image-editor\";\nimport {Tooltip,Media,TabContent, TabPane,Nav, NavItem, NavLink,Button,Modal,ModalHeader,ModalBody,ModalFooter,Card,CardBody,CardTitle, UncontrolledTooltip} from \"reactstrap\";\nimport Basics from \"./BasicsComponent\";\nimport Filter from \"./FilterComponent\";\nimport Reform from \"./CropComponent\";\nimport Draw from \"./DrawComponent\";\nimport Text from \"./TextComponent\";\nimport Mask from \"./MaskComponent\";\nimport Sticker from \"./StickerComponent\";\nimport classnames from 'classnames';\nconst download = require(\"downloadjs\");\nfunction hexToRGBa(hex, alpha) {\n    if(hex===null){return null;}\n    var r = parseInt(hex.slice(1, 3), 16);\n    var g = parseInt(hex.slice(3, 5), 16);\n    var b = parseInt(hex.slice(5, 7), 16);\n    var a = alpha || 1;\n    if (isNaN(r) || isNaN(g) || isNaN(b)) {return null;}\n\n    return {r:r, g:g, b:b, a:a};\n}\nfunction getRGBaValues(rgb){\n    var colorsOnly = rgb.substring(rgb.indexOf('(') + 1, rgb.lastIndexOf(')')).split(/,\\s*/);\n    return {r:colorsOnly[0], g:colorsOnly[1], b:colorsOnly[2], a:colorsOnly[3]}\n}\n\nclass Home extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n        curMode:\"normal\",\n        imageSelected:this.props.imageSelected,\n        imageLib : this.props.imageLib,\n        curId:this.props.curId,\n        activeTab:'1',\n        drawColor:{\n            r: '241',\n            g: '112',\n            b: '19',\n            a: '1'\n        },\n        textColor:{\n            r: '255',\n            g: '187',\n            b: '59',\n            a: '1'\n        },\n        drawRange: { x: 5},\n        textRange: { x: 50},\n        selectedId: 0,\n        selectedTextId: 0,\n        selectedDrawId: 0,\n        selectedImageId: 0,\n        brightnessrange:{x:0},\n        noiserange:{x:0},\n        blurrange:{x:0},\n        cropsize:0,\n        isModalOpen:false,\n        bold:false,\n        italic:false,\n        underline:false,\n        grayscaleselected:false,\n        sepiaselected:false,\n        embossselected:false,\n        invertselected:false,\n        sharpenselected:false,\n        pixelateselected:false,\n        checkcropmode:false,\n        cropMode:'normal',\n        maskclicked:false,\n        isMaskMode:false,\n        tooltipOpen:false,\n        tooltipredo:false,\n        tooltipreset:false,\n        filterUsed:[]\n    }\n    this.saveImageToDisk = this.saveImageToDisk.bind(this);\n    this.toggleModal = this.toggleModal.bind(this);\n    this.confirmModal = this.confirmModal.bind(this);\n    this.checkhighlight = this.checkhighlight.bind(this);\n    this.uploadHandleClick = this.uploadHandleClick.bind(this);\n    this.uploadHandleChange = this.uploadHandleChange.bind(this);\n    this.toggleTab = this.toggleTab.bind(this);\n    this.toggleUndo= this.toggleUndo.bind(this);\n    this.toggleRedo= this.toggleRedo.bind(this);\n    this.toggleReset= this.toggleReset.bind(this);\n  }\n  //Create editor instance reference\n  imageEditor = React.createRef();\n  //handle upload functions\n  hiddenFileInput = React.createRef();\n  toggleUndo(){\n      this.setState({\n        tooltipOpen :!this.state.tooltipOpen\n        });\n  }\n  toggleRedo(){\n      this.setState({\n        tooltipredo :!this.state.tooltipredo\n        });\n  }\n  toggleReset(){\n    this.setState({\n        tooltipreset :!this.state.tooltipreset\n    });\n}\n  toggleModal(){\n      this.setState({\n        isModalOpen :!this.state.isModalOpen\n      });\n  }\n  toggleTab(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n  confirmModal(){\n    const editorInstance = this.imageEditor.current.getInstance();\n    editorInstance.loadImageFromURL(this.state.imageSelected.name,\"image\");\n    this.props.changeImageSelected(this.state.imageSelected);\n    this.props.changeImageLib(this.state.imageLib);\n    this.props.changeCurId(this.state.curId);\n    this.toggleModal()\n    }\n  \n  //Saving method. Will be used later\n  saveImageToDisk (){\n    const imageEditorInst = this.imageEditor.current.imageEditorInst;\n    const data = imageEditorInst.toDataURL();\n    if (data) {\n      const mimeType = data.split(\";\")[0];\n      const extension = data.split(\";\")[0].split(\"/\")[1];\n      download(data, `image.${extension}`, mimeType);\n    }\n  };\n  componentDidMount(){\n    this.imageEditor.current.getRootElement().children[0].classList.add('d-none');\n    this.imageEditor.current.getRootElement().children[1].children[0].classList.add('d-none');\n    this.imageEditor.current.getRootElement().children[1].children[1].children[0].classList.add('d-none');\n  }\n  //check highlighted picture in upload \n  checkhighlight(img){\n    const check = this.state.imageSelected.id===img.id? \"highlight\":\"\";\n    return check;\n  }\n  \n  /* Programatically click the hidden file input element\n   when the Button component is clicked*/\n  uploadHandleClick (){\n    this.hiddenFileInput.current.click();\n  };\n  /*Call a function (passed as a prop from the parent component)\n   to handle the user-selected file */\n  uploadHandleChange (event) {\n    const files = event.target.files;\n    const { imageLib } = this.state;\n    var fileList=[];\n    var id = this.state.curId;\n      for(var i =0; i<files.length;i++){\n        const fileUploaded = URL.createObjectURL(files[i]);\n        const newImage = {\n            name: fileUploaded,\n            id: id+1,\n            width:0,\n            height:0\n        }\n        id+=1;\n        fileList.push(newImage);\n    }\n      //console.log(fileList);\n    this.setState({\n        curId:id,\n        imageLib: imageLib.concat(fileList)\n    }); \n  };\n//Return back to the Nomal mode befor all features\nstopDrawingMode(){\n    const editorInstance = this.imageEditor.current.getInstance();\n    editorInstance.stopDrawingMode();\n  }\n\n//Handle the sleection event when an object is selected\nhandleSelection(props){\n    if(props.type==='i-text'){\n        this.setState({selectedTextId:props.id});\n        this.setState({textRange:{x:parseInt(props.fontSize, 10)}});\n        this.setState({textColor: (hexToRGBa(props.fill,1)===null)?getRGBaValues(props.fill):hexToRGBa(props.fill,1)});\n        if(props.fontWeight==='bold'){\n            this.setState({bold:true});\n        }else{\n            this.setState({bold:false});\n        }\n        if(props.fontStyle==='italic'){\n            this.setState({italic:true});\n        }else{\n            this.setState({italic:false});\n        }\n        if(props.textDecoration==='underline'){\n            this.setState({underline:true});\n        }else{\n            this.setState({underline:false});\n        }\n        this.setState({curMode:props.textAlign});\n    }\n    if(props.type==='path'|| props.type==='line'){\n        this.setState({selectedDrawId:props.id});\n    }\n    if(props.type==='image'){\n        this.setState({selectedImageId:props.id});\n        this.setState({isMaskMode:true});\n    }\n}\n//Handle mouse down event\nhandleMouseDown(event, originPointer){\n    const editorInstance = this.imageEditor.current.getInstance();\n    if(editorInstance.getDrawingMode()!=='CROPPER'){\n        this.setState({checkcropmode:false});\n        this.setState({cropMode:'normal'});\n    }\n  }\n\n//Handle Drawing features\nstartDrawMode(){\n    const editorInstance = this.imageEditor.current.getInstance();\n    editorInstance.deactivateAll();\n    this.handleDraw('free')\n}\nhandleDraw(mode){\n    const editorInstance = this.imageEditor.current.getInstance();\n    const settings= {\n        width: this.state.drawRange.x,\n        color: `rgba(${ this.state.drawColor.r }, ${ this.state.drawColor.g }, ${ this.state.drawColor.b }, ${ this.state.drawColor.a })`\n    }\n    if(mode===\"free\"){\n        if(editorInstance.getDrawingMode()===\"FREE_DRAWING\"){\n            editorInstance.stopDrawingMode();\n        }else{\n            editorInstance.startDrawingMode('FREE_DRAWING',settings);\n            this.setState({curMode:\"freedraw\"})\n        }\n    }else if(mode===\"line\"){\n        if(editorInstance.getDrawingMode()===\"LINE_DRAWING\"){\n            editorInstance.stopDrawingMode();\n        }else{\n            editorInstance.startDrawingMode('LINE_DRAWING',settings);\n            this.setState({curMode:\"straightdraw\"})\n        }\n    }else{\n        editorInstance.stopDrawingMode();\n        this.setState({curMode:\"edit\"})\n    }\n  }\n  handleDrawColor(color){\n      this.setState({drawColor:color});\n      const editorInstance = this.imageEditor.current.getInstance();\n      const settings= {\n        width: this.state.drawRange.x,\n        color: `rgba(${ color.r }, ${ color.g }, ${ color.b }, ${ color.a })`\n    }\n      if(editorInstance.getDrawingMode()==='LINE_DRAWING'){\n        editorInstance.stopDrawingMode();\n        editorInstance.startDrawingMode('LINE_DRAWING',settings);\n        return;\n      }\n      editorInstance.setBrush({color: `rgba(${ color.r }, ${ color.g }, ${ color.b }, ${ color.a })`})\n  }\n  handleDrawRange(range){\n      this.setState({drawRange: range});\n      const editorInstance = this.imageEditor.current.getInstance();\n      const settings= {\n        width: range.x,\n        color: `rgba(${ this.state.drawColor.r }, ${ this.state.drawColor.g }, ${ this.state.drawColor.b }, ${ this.state.drawColor.a })`\n    }\n      if(editorInstance.getDrawingMode()==='LINE_DRAWING'){\n        editorInstance.stopDrawingMode();\n        editorInstance.startDrawingMode('LINE_DRAWING',settings);\n        return;\n      }\n      editorInstance.setBrush({width: range.x});\n  }\n  removeDraw(){\n    const editorInstance = this.imageEditor.current.getInstance();\n    editorInstance.removeObject(this.state.selectedDrawId);\n  }\n\n//Handle Text Features\nstartTextMode(){\n    const editorInstance = this.imageEditor.current.getInstance();\n    editorInstance.deactivateAll();\n    if(editorInstance.getDrawingMode()==='TEXT'){\n        editorInstance.stopDrawingMode();\n    }else{\n        editorInstance.startDrawingMode('TEXT');\n    }\n}\naddText(){\n    const editorInstance = this.imageEditor.current.getInstance();\n    editorInstance.deactivateAll();\n    const settings= {\n        styles:{\n            fontSize: 50,\n            fill: `rgba(${ this.state.textColor.r }, ${ this.state.textColor.g }, ${ this.state.textColor.b }, ${ this.state.textColor.a })`\n        },\n        position: {\n            x:350,\n            y: 200\n        }\n    }\n    editorInstance.addText('Double Click',settings);\n\n}\nremoveText(){\n    const editorInstance = this.imageEditor.current.getInstance();\n    editorInstance.removeObject(this.state.selectedTextId);\n\n}\nhandleText(mode){\n    const editorInstance = this.imageEditor.current.getInstance();\n    var styleObj;\n    switch (mode) {\n        case 'b':\n            styleObj = {fontWeight: 'bold'};\n            this.setState({bold:!this.state.bold});\n            break;\n        case 'i':\n            styleObj = {fontStyle: 'italic'};\n            this.setState({italic:!this.state.italic});\n            break;\n        case 'u':\n            styleObj = {textDecoration: 'underline'};\n            this.setState({underline:!this.state.underline});\n            break;\n        case 'l':\n            styleObj = {textAlign: 'left'};\n            this.setState({curMode:'left'});\n            break;\n        case 'c':\n            styleObj = {textAlign: 'center'};\n            this.setState({curMode:'center'});\n            break;\n        case 'r':\n            styleObj = {textAlign: 'right'};\n            this.setState({curMode:'right'});\n            break;\n        default:\n            styleObj = {};\n    }\n    editorInstance.changeTextStyle(this.state.selectedTextId,styleObj);\n  }\nhandleTextColor(color){\n    this.setState({textColor:color});\n    const editorInstance = this.imageEditor.current.getInstance();\n    editorInstance.changeTextStyle(this.state.selectedTextId,{\n        'fill': `rgba(${ color.r }, ${ color.g }, ${ color.b }, ${ color.a })`\n    });\n}\nhandleTextRange(range){\n    this.setState({textRange: range});\n    const editorInstance = this.imageEditor.current.getInstance();\n    editorInstance.changeTextStyle(this.state.selectedTextId,{\n        fontSize: parseInt(range.x, 10)\n    });\n}\n\n//Handle Flip Features\nhandleFlip(){\n    const editorInstance = this.imageEditor.current.getInstance();\n    editorInstance.flipX();\n\n  }\n\n\n  handleFlipy(){\n    const editorInstance = this.imageEditor.current.getInstance();\n    editorInstance.flipY();\n  }\n\n//Handle Crop Features\n  startcropdrawingmode(size){\n    switch (size) {\n        case '1':\n            this.setState({cropMode:'crop-square'});\n            break;\n        case '1.75':\n            this.setState({cropMode:'crop-4-3'});\n            break;\n        case '1.77777':\n            this.setState({cropMode:'crop-16-9'});\n            break;\n    }\n    const editorInstance = this.imageEditor.current.getInstance();\n    editorInstance.deactivateAll();\n    this.setState({checkcropmode:true});\n    if(editorInstance.getDrawingMode()==='CROPPER'){\n        editorInstance.stopDrawingMode();\n    }else{\n        editorInstance.startDrawingMode('CROPPER');\n        editorInstance.setCropzoneRect(size);\n    }\n  }\n\n  Crop(){\n    this.setState({filterUsed:[]});\n    const editorInstance = this.imageEditor.current.getInstance();\n    const axis=editorInstance.getCropzoneRect();\n    editorInstance.deactivateAll();\n    editorInstance.crop(axis);\n    this.setState({checkcropmode:false});\n  }\n\n  cancelcrop(){\n    const editorInstance = this.imageEditor.current.getInstance();\n    editorInstance.deactivateAll();\n    this.setState({cropMode:'normal',checkcropmode:false})\n  }\n  checkcropmode(){\n    const editorInstance = this.imageEditor.current.getInstance();\n    if(editorInstance.getDrawingMode()==='CROPPER'){\n        return true;\n    }\n    else{\n        return false;\n    }\n  }\n\n  Rotate(){\n    const editorInstance = this.imageEditor.current.getInstance();\n    editorInstance.rotate(90);\n  }\n  Rotate2(){\n    const editorInstance = this.imageEditor.current.getInstance();\n    editorInstance.rotate(-90);\n  }\n\n  //Handle Filter Features\n  GrayscaleFilter(){\n    const editorInstance = this.imageEditor.current.getInstance();\n    if(this.state.grayscaleselected==false){\n        editorInstance.applyFilter('Grayscale');\n        this.setState({\n            grayscaleselected:true,\n            filterUsed:[...this.state.filterUsed,'Grayscale']\n        });\n    }\n    else{\n        this.setState({\n            grayscaleselected:false,\n            filterUsed: this.state.filterUsed.filter((f)=>f!=='Grayscale')\n        });\n        editorInstance.removeFilter('Grayscale');\n    }\n  }\n\n  SepiaFilter(){\n    const editorInstance = this.imageEditor.current.getInstance();\n    if(this.state.sepiaselected==false){\n        editorInstance.applyFilter('Sepia');\n        this.setState({\n            sepiaselected:true,\n            filterUsed:[...this.state.filterUsed,'Sepia']\n        });\n;    }\n    else{\n        this.setState({\n            sepiaselected:false,\n            filterUsed: this.state.filterUsed.filter((f)=>f!=='Sepia')\n        });\n        editorInstance.removeFilter('Sepia');\n    }\n  }\n\n  EmbossFilter(){\n    const editorInstance = this.imageEditor.current.getInstance();\n    if(this.state.embossselected==false){\n        editorInstance.applyFilter('Emboss');\n        this.setState({\n            embossselected:true,\n            filterUsed:[...this.state.filterUsed,'Emboss']\n        });\n        this.setState({embossselected:true});\n}\n    else{\n        this.setState({\n            embossselected:false,\n            filterUsed: this.state.filterUsed.filter((f)=>f!=='Emboss')\n        });\n        editorInstance.removeFilter('Emboss');\n    }\n  }\n\n  InvertFilter(){\n    const editorInstance = this.imageEditor.current.getInstance();\n    if(this.state.invertselected==false){\n        editorInstance.applyFilter('Invert');\n        this.setState({\n            invertselected:true,\n            filterUsed:[...this.state.filterUsed,'Invert']\n        });\n        this.setState({invertselected:true});\n    }\n    else{\n        this.setState({\n            invertselected:false,\n            filterUsed: this.state.filterUsed.filter((f)=>f!=='Invert')\n        });\n        editorInstance.removeFilter('Invert')\n    }\n  }\n\n  SharpenFilter(){\n    const editorInstance = this.imageEditor.current.getInstance();\n    if(this.state.sharpenselected==false){\n        editorInstance.applyFilter('Sharpen');\n        this.setState({\n            sharpenselected:true,\n            filterUsed:[...this.state.filterUsed,'Sharpen']\n        });\n        this.setState({sharpenselected:true});\n    }\n    else{\n        this.setState({\n            sharpenselected:false,\n            filterUsed: this.state.filterUsed.filter((f)=>f!=='Sharpen')\n        });\n        editorInstance.removeFilter('Sharpen')\n    }\n    \n  }\n\n  PixelateFilter(){\n    const editorInstance = this.imageEditor.current.getInstance();\n    if(this.state.pixelateselected==false){\n        editorInstance.applyFilter('Pixelate');\n        this.setState({\n            pixelateselected:true,\n            filterUsed:[...this.state.filterUsed,'Pixelate']\n        });\n        this.setState({pixelateselected:true});\n    }\n    else{\n        this.setState({\n            pixelateselected:false,\n            filterUsed: this.state.filterUsed.filter((f)=>f!=='Pixelate')\n        });\n        editorInstance.removeFilter('Pixelate')\n    }\n    \n  }\n\n  //handle basic feature(with sliders)\n  handleexposure(range){\n    this.setState({brightnessrange:range});\n    const editorInstance = this.imageEditor.current.getInstance();\n    editorInstance.applyFilter('Brightness',{brightness:range.x});\n  }\n\n  handlenoise(range){\n    this.setState({noiserange:range});\n    const editorInstance = this.imageEditor.current.getInstance();\n    editorInstance.applyFilter('Noise',{noise:range.x});\n  }\n\n\n  handleblur(range){\n    this.setState({blurrange:range});\n    const editorInstance = this.imageEditor.current.getInstance();\n    editorInstance.applyFilter('Blur',{blur:range.x});\n  }\n\n//Handle Mask Feature\nismaskclicked(condition){\n    if(condition==true){\n        this.setState({maskclicked:true})\n    }\n    else{\n        this.setState({maskclicked:false})\n    }\n    \n}\nhandleMask1(){\n    const editorInstance = this.imageEditor.current.getInstance();\n    editorInstance.deactivateAll();\n    editorInstance.addImageObject(`${process.env.PUBLIC_URL}/images/Frames/frame1.jpg`);\n}\n\nhandleMask2(){\n    const editorInstance = this.imageEditor.current.getInstance();\n    editorInstance.deactivateAll();\n    editorInstance.addImageObject(`${process.env.PUBLIC_URL}/images/Frames/frame2.jpg`);\n}\n\nhandleMask3(){\n    const editorInstance = this.imageEditor.current.getInstance();\n    editorInstance.deactivateAll();\n    editorInstance.addImageObject(`${process.env.PUBLIC_URL}/images/Frames/frame3.jpg`);\n    \n}\n\nhandleMask4(){\n    const editorInstance = this.imageEditor.current.getInstance();\n    editorInstance.deactivateAll();\n    editorInstance.addImageObject(`${process.env.PUBLIC_URL}/images/Frames/frame5.jpg`);\n    \n}\n\napplyMask(){\n    const editorInstance = this.imageEditor.current.getInstance();\n    const myArray = this.state.filterUsed;\n    //const myArray=['Grayscale','Invert'];\n    if(myArray.length>0){\n        var p = editorInstance.removeFilter('');\n        myArray.forEach((filter)=>{\n        //console.log(filter);\n        p= p.then(()=>{\n            editorInstance.removeFilter(filter);\n        })\n        })\n        p = p.then(()=>{\n            editorInstance.applyFilter('mask',{maskObjId:this.state.selectedImageId});\n        })\n        \n        myArray.forEach((filter)=>{\n            //console.log(filter);\n            p= p.then(()=>{\n                editorInstance.applyFilter(filter);\n            })\n            //console.log(p);\n        })\n    }else{\n        editorInstance.applyFilter('mask',{maskObjId:this.state.selectedImageId});\n    }\n    \n    this.setState({isMaskMode:false});\n}\n\ndeleteMask(){\n    const editorInstance = this.imageEditor.current.getInstance();\n    editorInstance.deactivateAll();\n    editorInstance.removeObject(this.state.selectedImageId);\n    this.setState({isMaskMode:false});\n}\n\n//Handle Stick Feature\n\nhandleSticker1(){\n    const editorInstance = this.imageEditor.current.getInstance();\n    editorInstance.deactivateAll();\n    editorInstance.addImageObject(`${process.env.PUBLIC_URL}/images/Sticker/mcmlogo1.jpg`);\n\n}\n\nhandleSticker2(){\n    const editorInstance = this.imageEditor.current.getInstance();\n    editorInstance.deactivateAll();\n    editorInstance.addImageObject(`${process.env.PUBLIC_URL}/images/Sticker/mcmlogo2.jpg`);\n}\n\nhandleSticker3(){\n    const editorInstance = this.imageEditor.current.getInstance();\n    editorInstance.deactivateAll();\n    editorInstance.addImageObject(`${process.env.PUBLIC_URL}/images/Sticker/mcmgrad1.jpg`);\n}\n\nhandleSticker4(){\n    const editorInstance = this.imageEditor.current.getInstance();\n    editorInstance.deactivateAll();\n    editorInstance.addImageObject(`${process.env.PUBLIC_URL}/images/Sticker/mcmgrad2.jpg`);\n}\n\nhandleSticker5(){\n    const editorInstance = this.imageEditor.current.getInstance();\n    editorInstance.deactivateAll();\n    editorInstance.addImageObject(`${process.env.PUBLIC_URL}/images/Sticker/mcmeng1.jpg`);\n}\n\nhandleSticker6(){\n    const editorInstance = this.imageEditor.current.getInstance();\n    editorInstance.deactivateAll();\n    editorInstance.addImageObject(`${process.env.PUBLIC_URL}/images/Sticker/mcmeng2.jpg`);\n}\n\nhandleSticker7(){\n    const editorInstance = this.imageEditor.current.getInstance();\n    editorInstance.deactivateAll();\n    editorInstance.addImageObject(`${process.env.PUBLIC_URL}/images/Sticker/mcmeng3.jpg`);\n}\n\nremoveSticker(){\n    const editorInstance = this.imageEditor.current.getInstance();\n    editorInstance.deactivateAll();\n    editorInstance.removeObject(this.state.selectedImageId);\n}\n\n  //Handle Undo/Redo/clearAll Features\n  undo(){\n    const editorInstance = this.imageEditor.current.getInstance();\n    editorInstance.undo();\n  }\n  redo(){\n    const editorInstance = this.imageEditor.current.getInstance();\n    editorInstance.redo();\n  }\n  clearall(){\n    const editorInstance = this.imageEditor.current.getInstance();\n    editorInstance.deactivateAll();\n    this.setState({    \n        brightnessrange:{x:0},\n        noiserange:{x:0},\n        blurrange:{x:0},\n        grayscaleselected:false,\n        sepiaselected:false,\n        embossselected:false,\n        invertselected:false,\n        sharpenselected:false,\n        pixelateselected:false,\n        maskclicked:false,\n        bold:false,\n        italic:false,\n        underline:false,\n        curMode:\"normal\",\n        filterUsed:[]\n\n    })\n    editorInstance.stopDrawingMode();\n    editorInstance.loadImageFromURL(this.props.imageSelected.name,\"image\");\n  }\n\n  render(){\n    const imgLibrary= this.state.imageLib.map((image)=>{\n        return(\n            <div key={image.id} className=\"col-lg-4 col-6\">\n                <img alt={image.name} \n                className={\"img-thumbnail \" + this.checkhighlight(image)}\n                onClick={()=>this.setState({imageSelected:image})}\n                src={image.name} />\n            </div>\n            );\n        });\n    return (\n        <div className=\"row row-content\">\n            <div className=\"col-md-8 col-12  order-md-1 canvas\">\n                <div className=\"row\">\n                    <div className=\" col-md-10\">\n                        <ImageEditor \n                        ref={this.imageEditor}\n                        includeUI={{\n                            loadImage: {\n                            path: this.state.imageSelected.name,\n                            name: \"image\",\n                            },\n                            //theme: myTheme,\n                            uiSize: {\n                                height: '500px',\n                                width: '900px'\n                            }\n                        }} \n                        cssMaxHeight={460}\n                        cssMaxWidth={700}\n                        selectionStyle={{\n                            cornerSize: 15,\n                            cornerStyle:\"circle\",\n                            cornerColor:\"white\",\n                            rotatingPointOffset: 70,\n                        }}\n                        onObjectActivated={(props)=>this.handleSelection(props)}\n                        onMousedown={(event, originPointer)=>this.handleMouseDown(event, originPointer)}\n                        />\n                    </div>\n                </div>\n            </div>\n            {/* This column is for the left sub task*/}\n            <div className=\"col-md-3 col-12 order-md-0\">\n                <div className=\"row\">\n                    <div className=\"col-md-4 col-12 justify-content-center\">\n                        <Nav tabs vertical pills>\n                            <NavItem onClick={()=>this.stopDrawingMode()}>\n                                <NavLink\n                                    className={classnames({active: this.state.activeTab === '1'})}\n                                    onClick={() => {\n                                    this.toggleTab('1');\n                                    }}\n                                >\n                                    Basics\n                                </NavLink>\n                            </NavItem>\n                            <NavItem onClick={()=>this.stopDrawingMode()}>\n                                <NavLink\n                                    className={classnames({active: this.state.activeTab === '2'})}\n                                    onClick={() => {\n                                    this.toggleTab('2');\n                                    }}\n                                >\n                                    Filter\n                                </NavLink>\n                            </NavItem>\n                            <NavItem onClick={()=>this.stopDrawingMode()}>\n                                <NavLink\n                                    className={classnames({active: this.state.activeTab === '3'})}\n                                    onClick={() => {\n                                    this.toggleTab('3');\n                                    }}\n                                >\n                                    Reform\n                                </NavLink>\n                            </NavItem>\n                            <NavItem onClick={()=>this.startDrawMode()}>\n                                <NavLink\n                                    className={classnames({active: this.state.activeTab === '4'})}\n                                    onClick={() => {\n                                    this.toggleTab('4');\n                                    }}\n                                >\n                                    Draw\n                                </NavLink>\n                            </NavItem>\n                            <NavItem onClick={()=>this.stopDrawingMode()}>\n                                <NavLink\n                                    className={classnames({active: this.state.activeTab === '5'})}\n                                    onClick={() => {\n                                    this.toggleTab('5');\n                                    }}\n                                >\n                                    Sticker\n                                </NavLink>\n                            </NavItem>\n                            <NavItem onClick={()=>this.startTextMode()}>\n                                <NavLink\n                                    className={classnames({active: this.state.activeTab === '6'})}\n                                    onClick={() => {\n                                    this.toggleTab('6');\n                                    }}\n                                >\n                                    Text\n                                </NavLink>\n                            </NavItem>\n                            <NavItem onClick={()=>this.stopDrawingMode()}>\n                                <NavLink\n                                    className={classnames({active: this.state.activeTab === '7'})}\n                                    onClick={() => {\n                                    this.toggleTab('7');\n                                    }}\n                                >\n                                    Mask\n                                </NavLink>\n                            </NavItem>\n                        </Nav>\n\n                        <br />\n                        <br />\n                        <br />\n                        \n                        <Button id=\"undo\"outline color='light' block className=\"mt-2\"\n                            onClick={()=>{this.undo()}}\n                        >\n                            <Media object src={`${process.env.PUBLIC_URL}/images/undo.png`} width='30' />\n                        </Button>\n                        <Tooltip placement=\"right\" isOpen={this.state.tooltipOpen} target=\"undo\" toggle={this.toggleUndo}>\n                            Undo\n                        </Tooltip>\n\n                        <Button id=\"redo\"outline color='light' block className=\"mt-2\"\n                            onClick={()=>{this.redo()}}\n                        >\n                            <Media object src={`${process.env.PUBLIC_URL}/images/redo.png`} width='30' />\n                        </Button>\n                        <Tooltip placement=\"right\" isOpen={this.state.tooltipredo} target=\"redo\" toggle={this.toggleRedo}>\n                            Redo\n                        </Tooltip>\n                        <Button id=\"reset\"outline color='light' block className=\"mt-2\"\n                            onClick={()=>{this.clearall()}}\n                        >\n                            <Media object src={`${process.env.PUBLIC_URL}/images/circle-regular.png`} width='30' />\n                        </Button>\n                        <Tooltip placement=\"right\" isOpen={this.state.tooltipreset} target=\"reset\" toggle={this.toggleReset}>\n                            Reset\n                        </Tooltip>\n                    </div>\n                    <div className=\"col-md-8 col-12 justify-content-center\">\n                        <TabContent activeTab={this.state.activeTab}>\n                            <TabPane tabId=\"1\">\n                            <Basics \n                            range={this.state.brightnessrange}\n                            rangen={this.state.noiserange}\n                            rangeb={this.state.blurrange}\n                            exposurerange={(range)=>this.handleexposure(range)} \n                            noiserange={(rangen)=>this.handlenoise(rangen)} \n                            blurrange={(rangeb)=>this.handleblur(rangeb)} \n                            />\n                            </TabPane>\n                            <TabPane tabId=\"2\">\n                            <Filter \n                            grayscaleselected={this.state.grayscaleselected}\n                            sepiaselected={this.state.sepiaselected}\n                            embossselected={this.state.embossselected}\n                            invertselected={this.state.invertselected}\n                            sharpenselected={this.state.sharpenselected}\n                            pixelateselected={this.state.pixelateselected}\n                            GrayscaleFilter={()=>this.GrayscaleFilter()} \n                            SepiaFilter={()=>this.SepiaFilter()} \n                            EmbossFilter={()=>this.EmbossFilter()} \n                            InvertFilter={()=>this.InvertFilter()} \n                            SharpenFilter={()=>this.SharpenFilter()}\n                            PixelateFilter={()=>this.PixelateFilter()}/>\n                            </TabPane>\n                            <TabPane tabId=\"3\">\n                             <Reform \n                            handleFlip={()=>this.handleFlip()} \n                            handleFlipy={()=>this.handleFlipy()} \n                            startcropdrawingmode={(size)=>this.startcropdrawingmode(size)} \n                            Rotate={()=>this.Rotate()} \n                            Rotate2={()=>this.Rotate2()}\n                            Crop={()=>this.Crop()}\n                            curMode={this.state.cropMode}\n                            buttonactive={this.state.cropactive}\n                            iscropmode={this.state.checkcropmode}\n                            cancelcrop={()=>this.cancelcrop()}\n                            />\n                            </TabPane>\n                            <TabPane tabId=\"4\" >\n                            <Draw \n                            color={this.state.drawColor} \n                            changeColor={(color)=>this.handleDrawColor(color)}\n                            range={this.state.drawRange}\n                            changeRange={(range)=>this.handleDrawRange(range)}\n                            handleDraw={(mode)=>this.handleDraw(mode)}\n                            curMode={this.state.curMode}\n                            removeDraw={()=>this.removeDraw()}/>\n                            </TabPane>\n                            <TabPane tabId=\"5\">\n                            <Sticker \n                            color={this.state.drawColor} \n                            range={this.state.drawRange}\n                            handleSticker1={()=>this.handleSticker1()}\n                            handleSticker2={()=>this.handleSticker2()}\n                            handleSticker3={()=>this.handleSticker3()}\n                            handleSticker4={()=>this.handleSticker4()}\n                            handleSticker5={()=>this.handleSticker5()}\n                            handleSticker6={()=>this.handleSticker6()}\n                            handleSticker7={()=>this.handleSticker7()}\n                            removeSticker={()=>this.removeSticker()}\n                            curMode={this.state.curMode}\n                            />\n                            </TabPane>\n                            <TabPane tabId=\"6\">\n                            <Text \n                            color={this.state.textColor} \n                            changeColor={(color)=>this.handleTextColor(color)}\n                            range={this.state.textRange}\n                            changeRange={(range)=>this.handleTextRange(range)}\n                            handleText={(mode)=>this.handleText(mode)}\n                            curMode={this.state.curMode}\n                            bold={this.state.bold}\n                            italic={this.state.italic}\n                            underline={this.state.underline}\n                            addText={()=>this.addText()}\n                            removeText={()=>this.removeText()}\n                            />\n                            </TabPane>\n                            <TabPane tabId=\"7\">\n                            <Mask \n                            color={this.state.drawColor} \n                            range={this.state.drawRange}\n                            handleMask1={()=>this.handleMask1()}\n                            handleMask2={()=>this.handleMask2()}\n                            handleMask3={()=>this.handleMask3()}\n                            handleMask4={()=>this.handleMask4()}\n                            applyMask={()=>this.applyMask()}\n                            deleteMask={()=>this.deleteMask()}\n                            isMaskMode={this.state.isMaskMode}\n                            isclicked={this.state.maskclicked}\n                            ismaskclicked={(condition)=>this.ismaskclicked(condition)}\n                            />\n                            </TabPane>\n                        </TabContent>\n                    </div>\n                </div>\n            \n            </div> \n            {/* This column is for the Output button and upload on the right */}\n            <div className=\"col-md-1 col-12 order-md-2 \">\n                <div className=\"row justify-content-center\">\n                    <Button className=\"btn-outline-primary top left\" onClick={this.toggleModal}>Load</Button>{' '}\n                    <Modal className=\"modal-lg\" isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                            <ModalHeader toggle={this.toggleModal}>Select a Picture</ModalHeader>\n                            <ModalBody>\n                                <div className=\"row\">\n                                    <div key=\"0\"className=\"col-lg-4 col-6 mb-1\">\n                                        <Card>\n                                            <CardBody className=\"text-center\"> \n                                                <CardTitle alt=\"Upload\"\n                                                onClick={this.uploadHandleClick}\n                                                ><i className=\"fa fa-3x fa-upload\"></i><br/>\n                                                <a href=\"#\">Upload</a> \n                                                </CardTitle>\n                                            </CardBody>\n                                        </Card>\n                                        <input type=\"file\" multiple accept=\"image/*\" id=\"input-image-file\" \n                                        ref={this.hiddenFileInput}\n                                        onChange={this.uploadHandleChange}\n                                        style={{display: 'none'}} \n                                        />\n                                    </div>\n                                    {imgLibrary}\n                                </div>\n                            </ModalBody>\n                            <ModalFooter>\n                            <Button color=\"primary\" onClick={this.confirmModal}>Confirm</Button>{' '}\n                            <Button color=\"secondary\" onClick={this.toggleModal}>Cancel</Button>\n                            </ModalFooter>\n                        </Modal>\n                        <Button className=\"btn-outline-secondary top mr\" onClick={()=>this.saveImageToDisk()}>Download</Button>{' '}\n                </div>\n            </div>\n        </div>\n    );\n    }\n}\nexport default Home;","import React, {useState, Component} from 'react';\nimport { Collapse, Button, CardBody, Card, Form, FormGroup, FormText, Label, Input, Row, Col, Alert } from 'reactstrap';\nimport {InputGroup, InputGroupAddon, Modal, ModalBody, ModalHeader, ModalFooter, UncontrolledAlert } from 'reactstrap';\n//import SearchField from \"react-search-field\";\n//import { HashLink } from 'react-router-hash-link';\n\nfunction HelpCenter(props){\n\n    const AlertExample = (props) => {\n        const [isSubmit, setSubmit] = useState(false);\n      \n        const toggleSubmit =() => {setSubmit(true); setFormOpen(!isFormOpen)};\n\n    }\n\n    const [isFormOpen, setFormOpen] = useState(false);\n    const [isA1Open, setA1Open] = useState(true);\n    const [isA2Open, setA2Open] = useState(false);\n    const [isA3Open, setA3Open] = useState(false);\n    const [isA4Open, setA4Open] = useState(false);\n    const [isA5Open, setA5Open] = useState(false);\n    const [isA6Open, setA6Open] = useState(false);\n\n    const [isSubmit, setSubmit] = useState(false);\n    const [isSearch, setSearch] = useState(false);\n    const [isrightSearch, setRightSearch] = useState(false);\n    const [searchContent, setSearchContent] = useState([]);\n    const [ifJump, setJump] = useState(false);\n\n    const toggle = () => {setFormOpen(!isFormOpen);setSubmit(false)};\n    const toggle1 = () => setA1Open(!isA1Open);\n    const toggle2 = () => setA2Open(!isA2Open);\n    const toggle3 = () => setA3Open(!isA3Open);\n    const toggle4 = () => setA4Open(!isA4Open);\n    const toggle5 = () => setA5Open(!isA5Open);\n    const toggle6 = () => setA6Open(!isA6Open);\n    const toggleSubmit =() => {setSubmit(true); setFormOpen(!isFormOpen)};\n    const onDismiss = () => setSubmit(false);\n    \n\n    function toggleSearchResult(value) {\n        if (value === \"How to save my work?\" || value === \"How to save my work\"){\n            setA6Open(true);\n            setSearch(false);\n            setJump(true);\n        }else if (value == ''){\n            setSearch(false);\n            setRightSearch(false);\n            setJump(false);\n        }else{\n            setSearch(true);\n            setRightSearch(false);\n            setJump(false);\n       }\n    }\n\n\n\n    return (\n        <div className=\"container\">\n            <div className=\"row row-content\">\n            <div className=\"header justify-content-center\">\n                    <h1 className=\"display-3\">Pics Magic</h1>\n                    <hr className=\"my-2\" />\n                    <p className=\"lead\">Frequently Asked Questions and Answers</p>\n            </div>   \n\n            <div className=\"input-group mb-3\">\n                <InputGroup>\n                    <Input placeholder=\"Please type your question here\" onChange={e => setSearchContent(e.target.value)}/>\n                    <InputGroupAddon addonType=\"append\"><a className='btn btn-outline-secondary search-icon' href={ifJump ?'#question6':'#'} role=\"button\" onClick={() => toggleSearchResult(searchContent)} ><i class=\"fa fa-search fa-1x\" aria-hidden=\"true\"></i>\n                    {/*<HashLink smooth to='/HelpCenter/#question6' active = {isA6Open}> Go to 6</HashLink>*/}\n                    </a></InputGroupAddon>\n                    <span class=\"input-group-btn input-space mt-auto mb-auto\">\n                    <Button className=\"left\" onClick={toggle} color=\"info\">Contact Us</Button>\n                    </span>\n\n                </InputGroup>\n\n                \n\n                 <Alert color=\"success\" isOpen={isSubmit} toggle={onDismiss}>\n                    We have received your submission! We will contact you in seven business days regards your issue. Thank you for the patience!\n                </Alert>\n\n                <Modal className=\"modal-lg\" isOpen={isFormOpen} toggle={toggle}>\n                    <ModalHeader toggle={toggle}>Let Us Know How We Can Help</ModalHeader>\n                        <ModalBody>\n                            <Form>\n                                <FormGroup>\n                                    <Label for=\"exampleEmail\">Name</Label>\n                                    <Input type=\"name\" name=\"name\" id=\"exampleName\" placeholder=\"Please enter your name\" />\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label for=\"examplePassword\">Email Address</Label>\n                                    <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"Please enter your email\" />\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label for=\"exampleText\">Issues</Label>\n                                    <Input type=\"textarea\" name=\"text\" id=\"exampleText\" placeholder=\"Let us know what is the issue\"/>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label for=\"exampleFile\">Attachments</Label>\n                                    <Input type=\"file\" name=\"file\" id=\"exampleFile\" />\n                                </FormGroup>\n                                </Form>\n                            </ModalBody>\n                            <ModalFooter>\n                                <Button color=\"primary\" onClick={toggleSubmit}>Submit</Button> {' '}{' '}\n                                <Button color=\"sceondary\" onClick={toggle}>Cancel</Button>\n                            </ModalFooter>\n                    </Modal>\n            </div>\n\n            \n\n            <Alert color=\"light\" isOpen={isSearch}>\n                Sorry... We currently don't have an answer for this question. Please use the \"Contact Us\" button to submit the issue to help us improve!\n                <br />\n            </Alert>\n\n                <div className=\"card\" id=\"question1\">\n                    <div className=\"card-header\" id=\"headingOne\">\n                    <h5 className=\"mb-0\">\n                        <Row onClick={toggle1}>\n                            <Col>How to upload a photo from my local?</Col>\n                        </Row>\n                    </h5>\n                    </div>\n                    <Collapse isOpen={isA1Open}>\n                    <div id=\"collapseOne\" className=\"collapse show\" aria-labelledby=\"headingOne\" data-parent=\"#accordion\">\n                    <div className=\"card-body\">\n                    <ul>\n                        <li> To upload a photo from your local, click on the <span className=\"font-weight-bold\">\"Load\"</span> button on the top right of the Home page. </li>\n                        <li>With the pop up modal, there is an <span className=\"font-weight-bold\">\"Upload\"</span> button at the very first.</li>\n                        <li>By clicking it, you should see your local folder is open, and you can choose the photo that you wish to upload. </li>\n                        <li>After the successful upload, you should the photo is added to the library.</li>\n                        <li>lick on that photo, and press <span className=\"font-weight-bold\">\"confirm\"</span> at the bottom of the modal. </li>\n                        <li>The image should be placed on the canvas, and you are good to go!</li>\n                    </ul>\n                    </div>\n                    </div>\n                    </Collapse>\n                </div>\n\n                <div className=\"card\" id=\"question2\">\n                    <div className=\"card-header\" id=\"headingOne\">\n                    <h5 className=\"mb-0\">\n                        <Row onClick={toggle2}>\n                            <Col>How to use a filter?</Col>\n                        </Row>\n                    </h5>\n                    </div>\n                    <Collapse isOpen={isA2Open}>\n                    <div id=\"collapseOne\" className=\"collapse show\" aria-labelledby=\"headingOne\" data-parent=\"#accordion\">\n                    <div className=\"card-body\">\n                        <ul>\n                            <li>First, click on the <span className=\"font-weight-bold\">\"Filter\"</span> button on the side navigation bar on the Home page </li>\n                            <li>You can see the various selection of filters, with a  preview of its effect shown on a sample picture.</li>\n                            <li>Click on the filter you want to use, and it will be applied to the image in the canvas. </li>\n                        </ul>\n                    </div>\n                    </div>\n                    </Collapse>\n                </div>\n\n                <div className=\"card\" id=\"question3\">\n                    <div className=\"card-header\" id=\"headingOne\">\n                    <h5 className=\"mb-0\">\n                        <Row onClick={toggle3}>\n                            <Col>What are under basic settings?</Col>\n                        </Row>\n                    </h5>\n                    </div>\n                    <Collapse isOpen={isA3Open}>\n                    <div id=\"collapseOne\" className=\"collapse show\" aria-labelledby=\"headingOne\" data-parent=\"#accordion\">\n                    <div className=\"card-body\">\n                    <ul>\n                        <li>Under the <span className=\"font-weight-bold\">\"Basic\"</span> functionality, you can find three slide bars. </li>\n                        <li>The first setting is <span className=\"font-weight-bold\">\"Exposure\"</span>:  you can slide the bar to change the image's brightness. </li>\n                        <li>The second setting is <span className=\"font-weight-bold\">\"Noise\"</span>:  you can slide the bar to change the image's noise level. </li>\n                        <li>The third setting is <span className=\"font-weight-bold\">\"Blur\"</span>:  you can slide the bar to change the image's blur level. </li>\n                    </ul>\n                    </div>\n                    </div>\n                    </Collapse>\n                </div>\n\n                <div className=\"card\" id=\"question4\">\n                    <div className=\"card-header\" id=\"headingOne\">\n                    <h5 className=\"mb-0\">\n                        <Row onClick={toggle4}>\n                            <Col>Where to find stickers?</Col>\n                        </Row>\n                    </h5>\n                    </div>\n                    <Collapse isOpen={isA4Open}>\n                    <div id=\"collapseOne\" className=\"collapse show\" aria-labelledby=\"headingOne\" data-parent=\"#accordion\">\n                    <div className=\"card-body\">\n                    <ul>\n                        <li>To find the stickers, first, navigate to the Home page. </li>\n                        <li>Then, click the <span className=\"font-weight-bold\">\"Sticker\"</span> button on the side navigation bar.</li>\n                        <li>You should see three categories are showed up on the menu. </li>\n                        <li>Click on the categories that you are interested in, and check what stickers are included under this category. </li>\n                        <li>Unfortunately, we don't support custom stickers for now. It will be included in the later version. </li>\n                    </ul>\n                    </div>\n                    </div>\n                    </Collapse>\n                </div>\n\n                <div className=\"card\" id=\"question5\">\n                    <div className=\"card-header\" id=\"headingOne\">\n                    <h5 className=\"mb-0\">\n                        <Row onClick={toggle5}>\n                            <Col>How to edit my draw?</Col>\n                        </Row>\n                    </h5>\n                    </div>\n                    <Collapse isOpen={isA5Open}>\n                    <div id=\"collapseOne\" className=\"collapse show\" aria-labelledby=\"headingOne\" data-parent=\"#accordion\">\n                    <div className=\"card-body\">\n                    <ul>\n                        <li>First, click on the <span className=\"font-weight-bold\">\"Edit\"</span> button. </li>\n                        <li>Then, select the draw you want to edit. </li>\n                        <li>You can rotate, flip, resize the drawing that you selected.</li>\n                        <li>However, the color and the range of the draw cannot be edited through the <span className=\"font-weight-bold\">\"Edit\"</span> button. They are finalized to what you selected before.  </li>\n                    </ul>\n                    </div>\n                    </div>\n                    </Collapse>\n                </div>\n\n                \n\n                <div className=\"card\" id=\"question6\">\n                    <div className=\"card-header\" id=\"headingOne\">\n                    <h5 className=\"mb-0\">\n                        <Row onClick={toggle6}>\n                            <Col>How to save my work?</Col>\n                        </Row>\n                    </h5>\n                    </div>\n                    <Collapse isOpen={isA6Open}>\n                    <div id=\"collapseOne\" className=\"collapse show\" aria-labelledby=\"headingOne\" data-parent=\"#accordion\">\n                    <div className=\"card-body\">\n                    <ul>\n                        <li>After finishing the image's editing, you can click on the <span className=\"font-weight-bold\">\"Download\"</span> button on the top right of the Home page. </li>\n                        <li>By clicking on that button, your work will be downloaded as a png file.</li>\n                        <li>You can rotate, flip, resize the drawing that you selected.</li>\n                        <li>To find where it is downloaded, please check your browser setting for the specific download location.  </li>\n                    </ul>\n                    </div>\n                    </div>\n                    </Collapse>\n                </div>\n\n                \n            </div>\n        </div>\n    );\n}\n\n\nexport default HelpCenter;","import React, { Component } from 'react';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport Home from './HomeComponent';\nimport HelpCenter from './HelpCenter';\nimport {Route,Redirect, Router, Switch} from 'react-router-dom';\nimport { createBrowserHistory as createHistory } from \"history\";\nconst history = createHistory();\nconst images=\n    [\n    {name: `${process.env.PUBLIC_URL}/images/mcmaster0.jpg`, id:1,width:980,height:580},\n    {name:`${process.env.PUBLIC_URL}/images/mcmaster1.jpg`, id:2,width:980,height:580},\n    {name:`${process.env.PUBLIC_URL}/images/mcmaster2.jpg`, id:3,width:600,height:399},\n    {name:`${process.env.PUBLIC_URL}/images/mcmaster3.jpg`, id:4,width:900,height:506},\n    {name:`${process.env.PUBLIC_URL}/images/mcmaster4.jpg`, id:5,width:980,height:580},\n    {name:`${process.env.PUBLIC_URL}/images/mcmaster5.jpg`, id:6,width:1170,height:610},\n    ]\n\nclass Main extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      imageLib:images,\n      imageSelected:{name: `${process.env.PUBLIC_URL}/images/mcmaster0.jpg`,id:1,width:980,height:580},\n      curId:6\n    }\n  }\n  render() {\n    const HomePage=(props)=>{\n      return(\n        <Home {...props} \n        imageLib={this.state.imageLib} \n        imageSelected={this.state.imageSelected}\n        curId={this.state.curId}\n        changeImageSelected={(value)=>this.setState({imageSelected:value})} \n        changeImageLib={(value)=>this.setState({imageLib:value})}\n        changeCurId={(value)=>this.setState({curId:value})} \n        />\n      );\n    }\n    return (\n      <div >\n          <Header/>\n            <Switch history ={history} >\n              <Route path=\"/home\"  exact component={HomePage} />\n              <Route path=\"/helpcenter\"component={HelpCenter} />\n              <Redirect to=\"/home\" ></Redirect>\n            </Switch>\n          <Footer />\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React, { Component } from 'react';\nimport Main from './components/MainComponent'\nimport './App.css';\nimport {BrowserRouter,Route} from 'react-router-dom';\n\nclass App extends Component {\n  \n  render() {\n    return (\n        <BrowserRouter basename={'/minigame_index/minigame/picsMagic'}>\n          <div>\n            <Main/>\n          </div>\n        </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"tui-image-editor/dist/tui-image-editor.css\";\nimport \"tui-color-picker/dist/tui-color-picker.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport \"bootstrap-social/bootstrap-social.css\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}